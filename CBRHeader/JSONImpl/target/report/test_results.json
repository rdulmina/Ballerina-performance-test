{"projectName":"JSONImpl","totalTests":1,"passed":1,"failed":0,"skipped":0,"coveredLines":10,"missedLines":0,"coveragePercentage":100.0,"moduleStatus":[{"name":"JSONImpl","totalTests":1,"passed":1,"failed":0,"skipped":0,"tests":[{"name":"testFunction","status":"PASSED"}]},{"name":"JSONImpl.service","totalTests":0,"passed":0,"failed":0,"skipped":0,"tests":[]}],"moduleCoverage":[{"name":"JSONImpl","coveredLines":0,"missedLines":0,"coveragePercentage":0.0,"sourceFiles":[]},{"name":"JSONImpl.service","coveredLines":10,"missedLines":0,"coveragePercentage":100.0,"sourceFiles":[{"name":"service.bal","coveredLines":[0,7,11,12,13,14,15,18,19,20],"missedLines":[],"coveragePercentage":100.0,"sourceCode":"import ballerina/http;\nimport ballerina/mime;\n\nconfigurable string httpClientUrl \u003d ?;\n\npublic int a \u003d 5;\nservice /CBRHeaderProxy on new http:Listener(9090) {\n    final http:Client httpClient;\n\n    function init() returns error? {\n        self.httpClient \u003d check new (httpClientUrl);\n    }\n    resource function post .(@http:Header string accept) returns http:Response|http:Error {\n        if !string:equalsIgnoreCaseAscii(accept, mime:APPLICATION_JSON) {\n            return error(\"Invalid routing header\");\n        }\n\n        return check self.httpClient-\u003e/;\n    }\n}\n"}]}]}